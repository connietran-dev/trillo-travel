// || PHOTO GALLERY
//--------------------------------------
.gallery {
    /* Flex to set images side by side */
    display: flex;

    &__photo {
        display: block;     // Gets rid of white space below image if you leave as inline
        width: 100%;
    }
}


// || HOTEL OVERVIEW
//--------------------------------------
.overview {
    /* Flex container for top-level Hotel Overview items */
    display: flex;
    align-items: center;    // Align vertically

    border-bottom: var(--line);

    &__heading {
        padding: 1.5rem 3rem;

        font-size: 2.25rem;
        font-weight: 300;
        letter-spacing: 1px;
        text-transform: uppercase;

        @media only screen and (max-width: $breakpoint-small) {
            font-size: 1.8rem;
            padding: 1.25rem 2rem;  // Decrease heading height
        }

        @media only screen and (max-width: $breakpoint-smallest) {
            padding: 1.25rem 1rem;
        }
    }

    &__stars {
        // Flex item will grow to occupy available space but entire space is part of element
        // So we use margin-right on auto to only occupy the space it needs
        // You can also put margin-left auto on location element

        // flex: 1;    
        margin-right: auto;     
        // background-color: yellow;   // Uncomment to test

        // svg's behave like inline elements like text which produces small whitespace underneath
        // So set their parent element to flexbox to get rid of whitespace
        display: flex;
    }

    &__icon-star,
    &__icon-location {
        height: 2rem;
        width: 2rem;
        fill: var(--color-primary);
    }

    &__icon-star {
        @media only screen and (max-width: $breakpoint-smallest) {
            height: 1.75rem;
            width: 1.75rem;   
        }
    }

    &__icon-location {
        margin-right: .5rem;

        @media only screen and (max-width: $breakpoint-smallest) {
            margin-right: 0;      
        }
    }

    &__location {
        // background-color: green;    // Uncomment to test
        display: flex;

        // TODO - Why not use align-items: center?
        // TODO - You actually don't need either properties
        // vertical-align sets inline or table-cell box
        // align-items sets direct children as a group on cross axis of flexbox
        // vertical-align: center;
        // align-items: center;
    
        font-size: 1.2rem;

        @media only screen and (max-width: $breakpoint-smallest) {
            font-size: 1rem;
        }
    }

    &__rating {
        /* Stretch to .overview flexbox */
        align-self: stretch;    

        /* Flexbox for rating and votes child elements */
        display: flex;  
        flex-direction: column;
        align-items: center;
        justify-content: center;

        margin-left: 3rem;
        padding: 0 2.25rem;

        color: #fff;
        background-color: var(--color-primary);

        @media only screen and (max-width: $breakpoint-small) {
            padding: 0 1.5rem;
        }
    }

    &__rating-average {
        margin-bottom: -3px;    // Decrease space between elements for aesthetic

        font-size: 2.5rem;
        font-weight: 300;

        @media only screen and (max-width: $breakpoint-small) {
            font-size: 1.8rem;
        }

        @media only screen and (max-width: $breakpoint-smallest) {
            font-size: 2.25rem;
        }
    }

    &__rating-count {
        font-size: .8rem;
        text-transform: uppercase;

        @media only screen and (max-width: $breakpoint-small) {
            font-size: .5rem;
        }

        @media only screen and (max-width: $breakpoint-smallest) {
            display: none; // Hide rating count on mobile
        }
    }
}


// || BUTTON INLINE
//--------------------------------------
// This is a new component since we use this for location and "Show all" link

.btn-inline {
    display: inline-block;
    padding-bottom: 2px;

    color: var(--color-primary);
    font-size: inherit;     // We will be setting font-size on parent

    background-color: transparent;
    border: none;
    border-bottom: 1px solid currentColor;  // Border will have same color as text incl. on hover

    cursor: pointer;
    
    transition: all .2s;

    & span {
        margin-left: 3px;   // Using px since they're so small

        transition: margin-left .5s;    // Use margin-left instead of all b/c span color is not changing correctly on hover
    }

    &:hover {
        color: var(--color-grey-dark-1);

        // When parent element is hovered, increase margin-left of arrow
        span {
            margin-left: 8px;
        }
    }

    &:focus {
        outline: none;
        // animation: name duration timing-function delay iteration-count direction fill-mode;
        animation: pulsate 1s infinite
    }
}

@keyframes pulsate {
    // Set beginning and end to normal
    0% {
        transform: scaleY(1);
        box-shadow: none;
    }

    50% {
        transform: scale(1.05);
        box-shadow: 0 1rem 4rem rgba(0,0,0,.25);    // offset-x | offset-y | blur-radius | color
    }

    100% {
        transform: scaleY(1);
        box-shadow: none;
    }
}


// || PARAGRAPH
//--------------------------------------
// :last-of-type applies to only the same type of element - .parapgraph
// :last-child applies to all types of element in .description
.paragraph:not(:last-of-type) {
    margin-bottom: 2rem;
}


// || LIST
//--------------------------------------
.list {
    display: flex;
    flex-wrap: wrap;    // Allow elements to wrap to new lines

    margin: 3rem 0;
    padding: 3rem 0;

    border-top: var(--line);
    border-bottom: var(--line);
    
    list-style: none;

    &__item {
        flex: 0 0 50%;  // Gives each item a fixed width so they're not side by side - decided to use this instead of width
        margin-bottom: .7rem;
    }

    // Create pseudoelement before each __item
    &__item::before {
        content: "";
        display: inline-block;

        height: 1rem;
        width: 1rem;

        margin-right: .7rem;
        
        // This is the method for older browsers
        background-image: url(../img/chevron-thin-right.svg);
        background-size: cover;

        // For new browsers, use masks which is the best approach
        // Masks define an area where we can look through an area
        @supports(-webkit-mask-image: url()) or (mask-image: url()) {
            background-color: var(--color-primary);
            -webkit-mask-image: url(../img/chevron-thin-right.svg);
            -webkit-mask-size: cover;   // Icon will cover entire element
    
            // Add these in case browsers support this in the future        
            mask-image: url(../img/chevron-thin-right.svg);
            mask-size: cover;   // Icon will cover entire element
            background-image: none; // Fixes so that there is no black when using @supports
        }
    }
}


// || RECOMMEND
//--------------------------------------

.recommend {
    display: flex;
    align-items: center;
    // justify-content: space-between;  // We use margin-right: auto instead

    color: var(--color-grey-dark-3);
    font-size: 1.3rem;

    &__count {
        margin-right: auto; 
    }

    &__friends {
        display: flex;  // Always set photos side by side
    }

    &__photo {
        box-sizing: content-box;  // Set back to default so that border is not part of box-sizing 
        height: 4rem;
        width: 4rem;

        border-radius: 50%;
        border: 4px solid #fff;

        &:not(:last-child) {
            margin-right: -2rem;
        }
    }
}



// || REVIEWS
//--------------------------------------

.review {
    position: relative;

    margin-bottom: 3.5rem;
    padding: 3rem;

    background-color: #fff;
    box-shadow: var(--shadow-light);

    overflow: hidden;   // Hide overflow of quotation mark

    @media only screen and (max-width: $breakpoint-medium) {
        padding: 2rem;
        margin-bottom: 3rem;
    }

    // Create pseudoelement for quotation mark
    &::before {
        content: "\201C";    // Use ISOnum for CSS instead of HTML &ldquo;

        z-index: 1;     // Put behind .text z-index of 10
        position: absolute;
        top: -2.75rem;
        left: -1rem;

        color: var(--color-grey-light-2);
        font-family: sans-serif;    // Override default inherit of serif font
        font-size: 21rem;
        line-height: 1;     // Decrease line-height
    }

    &__text {
        z-index: 10;    // Put in front of quotation mark z-index of 1
        position: relative;     // Have to set position of element for it to have z-index

        margin-bottom: 2rem;
    }

    &__user {
        display: flex;
        align-items: center;
    }

    &__photo {
        margin-right: 1.5rem;
        
        height: 4.5rem;
        width: 4.5rem;

        border-radius: 50%;
    }

    &__user-box {
        margin-right: auto;     // Push rating to right
    }

    &__user-name {
        margin-bottom: .4rem;

        font-size: 1.1rem;
        font-weight: 600;
        text-transform: uppercase;
    }

    &__user-date {
        color: var(--color-grey-dark-3);
        font-size: 1rem;
    }

    &__rating {
        color: var(--color-primary);
        font-size: 2.4rem;
        font-weight: 300;
    }
}



// || CALL TO ACTION
//--------------------------------------
.cta {
    padding: 3.5rem 0;
    text-align: center;

    @media only screen and (max-width: $breakpoint-medium) {
        padding: 2.5rem 0;
    }

    &__book-now {
        margin-bottom: 2.5rem;

        font-size: 1.5rem;
        font-weight: 300;
        text-transform: uppercase;
    }
}

.btn {
    position: relative;
    overflow: hidden;   // "Only 4 rooms left" is overflowing the .btn

    color: #fff;
    font-size: 1.5rem;
    font-weight: 300;
    text-transform: uppercase;
    
    cursor: pointer;
    background-image: linear-gradient(to right, var(--color-primary-light), var(--color-primary-dark));
    border: none;
    border-radius: 100px;

    // Select all child elements
    & > * {
        display: inline-block;  // Originally inline but we want to use padding
        height: 100%;   // Give height and width of parent to element
        width: 100%;
        transition: all .2s;    // Note transition doesn't work on background-image
    }

    // "Book now" button
    &__visible {
        padding: 2rem 7.5rem;
    }

    // "Only 4 rooms left"
    &__invisible {
        position: absolute;
        left: 0;
        top: -100%;     // Move up exactly the size of the element

        padding: 2rem 0;    // Don't wrap text
        
    }

    &:hover {
        background-image: linear-gradient(to left, var(--color-primary-light), var(--color-primary-dark));
    }

    // When we hover over the button...
    &:hover &__visible {
        transform: translateY(100%);    // Translate it down
    }

    &:hover &__invisible {
        top: 0;
    }

    &:focus {
        outline: none;
        animation: pulsate 1s infinite;
    }
}